<?php defined('SYSPATH') OR die('No direct access allowed.');

$lang = array
(
	'class'                => '类',
	'method'               => '方法',
	'invalid_test_path'    => '无法打开测试路径: %s。',
	'duplicate_test_class' => '检测到重名测试类 %s，位置：%s。',
	'test_class_not_found' => '无法找到测试类 %s，位置：%s。',
	'test_class_extends'   => '%s 必须从 Unit_Test_Case 继承。',
	'no_tests_found'       => '没有找到可用测试',
	'score'                => '分值',
	'total'                => '总共',
	'passed'               => '通过',
	'failed'               => '失败',
	'error'                => '错误',
	'errors'               => '错误',
	'line'                 => '行',
	'assert_true'          => 'assert_true: 期望 true，但实际为 (%s) %s.',
	'assert_true_strict'   => 'assert_true_strict: 期望 (boolean) true，但实际为 (%s) %s.',
	'assert_false'         => 'assert_false: 期望 false，但实际为 (%s) %s.',
	'assert_false_strict'  => 'assert_false_strict: 期望 (boolean) false，但实际为 (%s) %s.',
	'assert_equal'         => 'assert_equal: 期望 (%s) %s，但实际为 (%s) %s.',
	'assert_not_equal'     => 'assert_not_equal: 期望非 (%s) %s，但实际为 (%s) %s.',
	'assert_same'          => 'assert_same: 期望 (%s) %s，但实际为 (%s) %s.',
	'assert_not_same'      => 'assert_not_same: 期望非 (%s) %s，但实际为 (%s) %s.',
	'assert_boolean'       => 'assert_boolean: 期望布尔值，但实际为 (%s) %s.',
	'assert_not_boolean'   => 'assert_not_boolean: 期望非布尔值，但实际为 (%s) %s.',
	'assert_integer'       => 'assert_integer: 期望整形值，但实际为 (%s) %s.',
	'assert_not_integer'   => 'assert_not_integer: 期望非整形值，但实际为 (%s) %s.',
	'assert_float'         => 'assert_float: 期望浮点值，但实际为 (%s) %s.',
	'assert_not_float'     => 'assert_not_float: 期望非浮点值，但实际为 (%s) %s.',
	'assert_array'         => 'assert_array: 期望数组，但实际为 (%s) %s.',
	'assert_array_key'     => 'assert_array_key: 期望合法键值，但实际为 (%s) %s.',
	'assert_in_array'      => 'assert_in_array: 期望合法值，但实际为 (%s) %s.',
	'assert_not_array'     => 'assert_not_array: 期望非数组，但实际为 (%s) %s.',
	'assert_object'        => 'assert_object: 期望对象值，但实际为 (%s) %s.',
	'assert_not_object'    => 'assert_not_object: 期望非对象值，但实际为 (%s) %s.',
	'assert_null'          => 'assert_null: 期望 null，但实际为 (%s) %s.',
	'assert_not_null'      => 'assert_not_null: 期望非 null，但实际为 (%s) %s.',
	'assert_empty'         => 'assert_empty: 期望空值，但实际为 (%s) %s.',
	'assert_not_empty'     => 'assert_not_empty: 期望非空值，但实际为 (%s) %s.',
	'assert_pattern'       => 'assert_pattern: 期望 %s 匹配模式 %s.',
	'assert_not_pattern'   => 'assert_not_pattern: 期望 %s 不匹配模式 %s.',
);
